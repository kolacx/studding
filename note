При запуске проекта мы инициализируем наше рабочие пространство
Пример
    Мапим наши урлы и связываем их с ихними функциями (Вьюшки).

Функция которая привязывается к Урлу возвращяет




Джанга при совпадении урла вызывает вьюшку (Функцию) с следующими параметрми:
    - Риквест (Обязательный аргумент)
    - Остальные аргименты (Обционально)

Джанга от вьюшки ожидает получение ХТТП респонса

___________________________________________________________________________________

Джанго Клас Бейст Вьюхи

Есть центральный клас который выполняет функцию которую требует Джанго. (Минимальные настройки)

У еэтого класа есть статичческий метод который называется as_view().
Вызов этого метода возвращяет мини-функцию (Вьюшку) которая пробрасывается в джангу.
( Удовлетворили минимальным набором данных Джангу ).

Вьюшка (Функция) которую возвращяет View.as_view()
определена в самом методе as_view и она выполняет следующий набор действий:
    - Создает инстанс класс Вьюшки.
    - Вызывает метод инициализации. (setup)
    - Возвращяет то что вернул вызов метода dispatch

Метод dispatch в зависимости от метода запроса ( request.method ) вызывает метод класа с такимже наименованием.

Метод который совпадает с наименованием метода запроса обязан вернуть HTTPResponse,
тем самым завершает контракт договоренностей джанги (Мин набор хули не ясно)

Любой класс который наследуется от View обязан определить хотябы один метод запроса.
Если етого не будет сделано то класс Вьюха еврнет ошибку 405 что данный метод не поддерживается.
В данном примере его и нет.

ДЗ

Почему в dispatch сначало проверяет реквест.метод в масиве http_method_names.
А потом проверяет наличие метода на класе.
Вопрос стоит в том почему бы не упростить функцию dispatch


Инстанс - переменная класа. Совокупность методов и атрибутов.